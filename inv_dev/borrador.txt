inv_dev/
├── __init__.py
├── __manifest__.py

└── models/
    └── __init__.py
    └── inv_model.py

└── views/
    └── inv_model_views.xml

└── security/
    └── ir.model.access.csv

└── controllers/
    └── __init__.py
    └── controllers.py

└── data/
    └── inventory_data.xml



tengo el siguiente modelo 

from odoo import models, fields, api
from odoo.exceptions import UserError
import base64

class Codigo(models.Model):
    _name = 'product.codigo'
    _description = 'Codigo'

    name = fields.Char(string="Codigo")

class Numero(models.Model):
    _name = 'product.numero'
    _description = 'Numero'

    name = fields.Char(string="Numero")

class Cantidad(models.Model):    
    _name = 'product.cantidad'
    _description = 'Cantidad'

    name = fields.Float(string="Cantidad", default=0.0)

class ProductExtension(models.Model):
    _inherit = 'product.product'

    id_codigo = fields.Many2one('product.codigo', string="Codigo")
    id_numero = fields.Many2one('product.numero', string="Numero")
    id_cantidad = fields.Many2one('product.cantidad', string="Cantidad")

    name = fields.Char(string="Nombre")

    @api.model
    def create(self, vals):
        if not vals.get('name'):
            vals['name'] = 'Producto sin nombre'
        return super(ProductExtension, self).create(vals)

    def write(self, vals):
        if 'name' not in vals and not self.name:
            vals['name'] = 'Producto sin nombre'
        return super(ProductExtension, self).write(vals)

    
class ProductExtensionWizard(models.TransientModel):
    _name = 'product.extension.wizard'
    _description = 'Product Extension Wizard'

    id_codigo = fields.Many2one('product.codigo', string="Codigo", required=True)
    id_numero = fields.Many2one('product.numero', string="Numero", required=True)
    id_cantidad = fields.Many2one('product.cantidad', string="Cantidad", required=True)

    def generate_zpl_label(self):
        self.ensure_one()
        zpl = f"""
        ^XA
        ^FO50,50 
        ^B3N,N,100,Y,N
        ^FD>: {self.id_codigo.name}^FS
        ^FO50,200
        ^A0N,50,50
        ^FDNumero: {self.id_numero.name}^FS
        ^FO50,300
        ^A0N,50,50
        ^FDCantidad: {self.id_cantidad.name}^FS
        ^FO50,400
        ^GB800,3,3^FS            
        ^FO50,550
        ^B3N,N,100,Y,N
        ^FD>: {self.id_codigo.name}^FS
        ^XZ
        """
        return zpl

    def preview_zpl_label(self):
        return {
            'type': 'ir.actions.act_url',
            'url': f'/product/label/{self.id}/preview',
            'target': 'self',
        }

el siguiente controller

from odoo import http
from odoo.http import request
import logging

class ProductExtensionController(http.Controller):
    _logger = logging.getLogger(__name__)

    @http.route('/product/label/<model("product.extension.wizard"):wizard_id>/download', type='http', auth='user')
    def download_zpl_label(self, wizard_id, **kw):
        try:
            self._logger.info("Generating ZPL label for wizard %s", wizard_id.id)
            zpl_content = wizard_id.generate_zpl_label()
            
            return request.make_response(
                zpl_content,
                headers=[('Content-Type', 'text/plain'),
                        ('Content-Disposition', f'attachment; filename=etiqueta_{wizard_id.id}.txt')]
            )
        except Exception as e:
            self._logger.error("Error generating ZPL label: %s", str(e))
            return request.make_response(
                f"Error generating ZPL label: {str(e)}",
                headers=[('Content-Type', 'text/plain')]
            )

    @http.route('/product/label/<model("product.extension.wizard"):wizard_id>/preview', type='http', auth='user')
    def preview_zpl_label(self, wizard_id, **kw):
        try:
            self._logger.info("Previewing ZPL label for wizard %s", wizard_id.id)
            zpl_content = wizard_id.generate_zpl_label()
            
            return request.make_response(
                zpl_content,
                headers=[('Content-Type', 'text/plain')]
            )
        except Exception as e:
            self._logger.error("Error previewing ZPL label: %s", str(e))
            return request.make_response(
                f"Error previewing ZPL label: {str(e)}",
                headers=[('Content-Type', 'text/plain')]
            )


el siguiente controller

id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_product_extension_wizard,access_product_extension_wizard,model_product_extension_wizard,,1,1,1,1
access_product_codigo,access_product_codigo,model_product_codigo,,1,1,1,1
access_product_numero,access_product_numero,model_product_numero,,1,1,1,1
access_product_cantidad,access_product_cantidad,model_product_cantidad,,1,1,1,1


y me da el siguiente error 

Error 404
No pudimos encontrar la página que busca
No se preocupe. Si cree que esto es un error, envíenos un mensaje a esta página.